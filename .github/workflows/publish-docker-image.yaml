name: Publish Docker Image

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: false
        description: 'The environment to publish the Docker image to.'
      tags:
        type: string
        required: true
        description: 'The tags to apply to the Docker image.'
      images:
        type: string
        required: true
        description: 'The images to publish'
  workflow_dispatch:
    inputs:
      tags:
        type: string
        required: true
        default: 'type=raw,value=my-custom-tag'
        description: 'eg `type=raw,value=my-custom-tag`. Please refer to https://github.com/docker/metadata-action?tab=readme-ov-file#tags-input'

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    environment: ${{ inputs.environment }}

    steps:
      # if the trigger is workflow_dispatch and the tag is latest

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Log in to Docker Hub
#        # Only log in to Docker Hub if the event is a release
#        if: github.event_name == 'release'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.images || ghcr.io/${{ github.repository }} }}
          tags: ${{ inputs.tags }}

      - name: Push to Registry(s)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
